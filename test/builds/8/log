Started by user [8mha:////4BD6S7qe0eceJcCBofcc7b+xcLUxPTP5MtncP8WVo19DAAAAlx+LCAAAAAAAAP9b85aBtbiIQTGjNKU4P08vOT+vOD8nVc83PyU1x6OyILUoJzMv2y+/JJUBAhiZGBgqihhk0NSjKDWzXb3RdlLBUSYGJk8GtpzUvPSSDB8G5tKinBIGIZ+sxLJE/ZzEvHT94JKizLx0a6BxUmjGOUNodHsLgAzWEgZu/dLi1CL9xJTczDwAj6GcLcAAAAA=[0madmin
Running as SYSTEM
Building in workspace /Users/monologue/.jenkins/workspace/test
The recommended git tool is: NONE
No credentials specified
 > git rev-parse --resolve-git-dir /Users/monologue/.jenkins/workspace/test/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/Abunuo/vite-typescript.git/ # timeout=10
Fetching upstream changes from https://github.com/Abunuo/vite-typescript.git/
 > git --version # timeout=10
 > git --version # 'git version 2.32.0 (Apple Git-132)'
 > git fetch --tags --force --progress -- https://github.com/Abunuo/vite-typescript.git/ +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/master^{commit} # timeout=10
Checking out Revision 7ed388d5c0ff919385f01750dab15e8c8493c688 (refs/remotes/origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 7ed388d5c0ff919385f01750dab15e8c8493c688 # timeout=10
Commit message: "add QS package"
 > git rev-list --no-walk 7ed388d5c0ff919385f01750dab15e8c8493c688 # timeout=10
[test] $ /bin/sh -xe /var/folders/lh/z0j870196l7g41pb1k29h6nw0000gp/T/jenkins14252921126228549787.sh
+ export CI=false
+ CI=false
+ '[' '!=' ']'
+ git tag -m 'jenkins build tag'
usage: git tag [-a | -s | -u <key-id>] [-f] [-m <msg> | -F <file>]
		<tagname> [<head>]
   or: git tag -d <tagname>...
   or: git tag -l [-n[<num>]] [--contains <commit>] [--no-contains <commit>] [--points-at <object>]
		[--format=<format>] [--merged <commit>] [--no-merged <commit>] [<pattern>...]
   or: git tag -v [--format=<format>] <tagname>...

    -l, --list            list tag names
    -n[<n>]               print <n> lines of each tag message
    -d, --delete          delete tags
    -v, --verify          verify tags

Tag creation options
    -a, --annotate        annotated tag, needs a message
    -m, --message <message>
                          tag message
    -F, --file <file>     read message from file
    -e, --edit            force edit of tag message
    -s, --sign            annotated and GPG-signed tag
    --cleanup <mode>      how to strip spaces and #comments from message
    -u, --local-user <key-id>
                          use another key to sign the tag
    -f, --force           replace the tag if exists
    --create-reflog       create a reflog

Tag listing options
    --column[=<style>]    show tag list in columns
    --contains <commit>   print only tags that contain the commit
    --no-contains <commit>
                          print only tags that don't contain the commit
    --merged <commit>     print only tags that are merged
    --no-merged <commit>  print only tags that are not merged
    --sort <key>          field name to sort on
    --points-at <object>  print only tags of the object
    --format <format>     format to use for the output
    --color[=<when>]      respect format colors
    -i, --ignore-case     sorting and filtering are case insensitive

Build step 'Execute shell' marked build as failure
Finished: FAILURE
